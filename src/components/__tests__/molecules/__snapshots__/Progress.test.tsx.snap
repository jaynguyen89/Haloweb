// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LabelProgress renders successfully 1`] = `
<ContextProvider
  value={
    Object {
      "getServerState": undefined,
      "noopCheck": "once",
      "stabilityCheck": "once",
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <LabelProgress
    progress="50"
    stage="showcase"
  />
</ContextProvider>
`;

exports[`LabelProgress.tsx renders successfully 1`] = `
<ContextProvider
  value={
    Object {
      "getServerState": undefined,
      "noopCheck": "once",
      "stabilityCheck": "once",
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <LabelProgress
    progress="50"
    stage="showcase"
  />
</ContextProvider>
`;

exports[`Progress renders successfully 1`] = `
<ContextProvider
  value={
    Object {
      "getServerState": undefined,
      "noopCheck": "once",
      "stabilityCheck": "once",
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <Progress
    stage="showcase"
  />
</ContextProvider>
`;

exports[`Progress.tsx renders successfully 1`] = `
<ContextProvider
  value={
    Object {
      "getServerState": undefined,
      "noopCheck": "once",
      "stabilityCheck": "once",
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <Progress
    stage="showcase"
  />
</ContextProvider>
`;
